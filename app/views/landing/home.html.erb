<!--<h1>Landing#home</h1>-->
<!--<p>Welcam to the world</p>-->
<%#= @wiki %>

<!--表示用div-->
<div id="eventInfo"></div>

<!--TODO: CDNから通知用ライブラリ取得しているので、あとでプロジェクトに含める-->
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/push.js/1.0.7/push.min.js"></script>

<!--リロードごとにリストから一件のみ表示-->
<script type="text/javascript">
    // イベント情報リストを作成
    // Ruby側でのhashはerbでは配列に変換されている
    var lists=[
        <% @renderEvent.each   do |p| -%>
          '<li ><%= p['title'] %> <a href="<%= p['event_url'] %>" target="_blank" id="link">リンク</a></li>',
        <% end -%>
    ];

    // イベント更新処理
    function eventReload(){
        var rNo = Math.floor(Math.random() * lists.length);
        document.getElementById('eventInfo').innerHTML = lists[rNo];
        notification();
    }

    // 通知表示処理
    function notification(){
        if (Push.Permission.has()) {
            // 通知文言を設定
            var notificationStr = document.getElementById('eventInfo').innerText;
            var linkUrl = document.getElementById('link').getAttribute('href');

            Push.create('勉強会情報', {
                body:    notificationStr,
                // icon:    './images/icon.png', // Image path displayed right side
                timeout: 30 * 1000,
                onClick: function () {
                    // 通知クリックでconnpassのページを新規タブで開く
                    window.open(linkUrl,'_brank')

                    this.close();
                }
            });
        }
    }

    // 通知許可をユーザーに求める
    function notificationPermission(){
        // 通知の許可をページ読み込み３秒後にポップアップで確認
        setTimeout(function () {
            Push.Permission.request(onGranted, onDenied);
        }, 3 * 1000);

        // 通知許可時コールバック処理
        function onGranted() {
            console.log('Granted!');
        }

        // 通知拒否時コールバック処理
        function onDenied() {
            ga('send', 'event', 'browser-push', 'denied', 'top', 1);
        }
    }

    // ページ読み込み時
    window.onload = function (){

        // 一定時間ごとにページをリロードするためのタイマー（600秒）
        tm = setInterval("location.reload()",600000);

        // 一定時間ごとにイベントを切り替え（60秒）
        eventInfo = setInterval("eventReload()",60000);

        // 通知許可をユーザーに求める
        notificationPermission();

        // イベント情報表示と通知
        eventReload();
    }
</script>


